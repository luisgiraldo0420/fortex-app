{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { compareObjects, getGroupsApi, deleteGroupApi } from \"../api/groups\";\nimport { useAuth } from \"./useAuth\";\nexport function useGroups() {\n  _s();\n\n  const {\n    auth\n  } = useAuth();\n  const [groups, setGropus] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [error, setError] = useState(null);\n\n  const getGroups = async () => {\n    try {\n      setLoading(true);\n      const response = await getGroupsApi(auth);\n      setLoading(false);\n      setGropus(response);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  const addGroup = async data => {\n    try {\n      setLoading(true);\n\n      if (auth != null) {\n        await compareObjects(data, auth, '');\n      }\n\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  const updateGroup = async (id, data) => {\n    try {\n      setLoading(true);\n\n      if (auth != null) {\n        await compareObjects(data, auth, id);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  const deleteGroup = async id => {\n    try {\n      setLoading(true);\n\n      if (auth != null) {\n        await deleteGroupApi(id, auth);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  const deletePerson = async (data, person) => {\n    try {\n      setLoading(true);\n\n      if (auth != null) {\n        console.log(data, 'desde el hook');\n      }\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n\n  return {\n    loading,\n    error,\n    groups,\n    getGroups,\n    addGroup,\n    updateGroup,\n    deleteGroup,\n    deletePerson\n  };\n}\n\n_s(useGroups, \"keXZXhbcoZ99xHhs6FFCZlsmrAc=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"names":["useState","compareObjects","getGroupsApi","deleteGroupApi","useAuth","useGroups","auth","groups","setGropus","loading","setLoading","error","setError","getGroups","response","addGroup","data","updateGroup","id","deleteGroup","deletePerson","person","console","log"],"sources":["/Users/luisgiraldo/Desktop/fortex/src/hooks/useGroups.tsx"],"sourcesContent":["\nimport { useState } from \"react\";\nimport { compareObjects, getGroupsApi, deleteGroupApi } from \"../api/groups\";\nimport { useAuth } from \"./useAuth\";\n\nexport function useGroups() {\n    const { auth } = useAuth();\n    const [groups, setGropus] = useState<any | null>(null);\n    const [loading, setLoading] =  useState<any | null>(null);\n    const [error, setError] = useState<any | null>(null);\n\n   \n    \n\nconst getGroups = async () => {\n    try {\n      setLoading(true);\n      const response = await getGroupsApi(auth);\n      setLoading(false);\n      setGropus(response);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  };\n  const addGroup = async (data:{}) => {\n    try {\n      setLoading(true);\n      if(auth != null){\n        await compareObjects(data, auth, '')\n      }\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  }\n\n  const updateGroup = async (id:any, data:{}) => {    \n    try {\n      setLoading(true);\n      if(auth != null){\n        await compareObjects(data, auth,  id);\n      }\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  }\n  const deleteGroup = async (id:any) => {\n    try {\n      setLoading(true);\n      if(auth != null){\n        await deleteGroupApi(id, auth);\n      }\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      setError(error);\n    }\n  }\nconst deletePerson = async  (data:any, person: any) =>{\n  try {\n     setLoading(true);\n    if(auth != null){\n    console.log(data, 'desde el hook');\n    \n    }\n  } catch (error) {\n    setLoading(false);\n    setError(error);\n  }\n}\n  \n    return {\n        loading,\n        error,\n        groups,\n        getGroups,\n        addGroup,\n        updateGroup,\n        deleteGroup,\n        deletePerson\n    }\n}\n"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,cAAvC,QAA6D,eAA7D;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,SAASC,SAAT,GAAqB;EAAA;;EACxB,MAAM;IAAEC;EAAF,IAAWF,OAAO,EAAxB;EACA,MAAM,CAACG,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAa,IAAb,CAApC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAyBV,QAAQ,CAAa,IAAb,CAAvC;EACA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAa,IAAb,CAAlC;;EAKJ,MAAMa,SAAS,GAAG,YAAY;IAC1B,IAAI;MACFH,UAAU,CAAC,IAAD,CAAV;MACA,MAAMI,QAAQ,GAAG,MAAMZ,YAAY,CAACI,IAAD,CAAnC;MACAI,UAAU,CAAC,KAAD,CAAV;MACAF,SAAS,CAACM,QAAD,CAAT;IACD,CALD,CAKE,OAAOH,KAAP,EAAc;MACdD,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAACD,KAAD,CAAR;IACD;EACF,CAVH;;EAWE,MAAMI,QAAQ,GAAG,MAAOC,IAAP,IAAmB;IAClC,IAAI;MACFN,UAAU,CAAC,IAAD,CAAV;;MACA,IAAGJ,IAAI,IAAI,IAAX,EAAgB;QACd,MAAML,cAAc,CAACe,IAAD,EAAOV,IAAP,EAAa,EAAb,CAApB;MACD;;MACDI,UAAU,CAAC,KAAD,CAAV;IACD,CAND,CAME,OAAOC,KAAP,EAAc;MACdD,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAACD,KAAD,CAAR;IACD;EACF,CAXD;;EAaA,MAAMM,WAAW,GAAG,OAAOC,EAAP,EAAeF,IAAf,KAA2B;IAC7C,IAAI;MACFN,UAAU,CAAC,IAAD,CAAV;;MACA,IAAGJ,IAAI,IAAI,IAAX,EAAgB;QACd,MAAML,cAAc,CAACe,IAAD,EAAOV,IAAP,EAAcY,EAAd,CAApB;MACD;;MACDR,UAAU,CAAC,KAAD,CAAV;IACD,CAND,CAME,OAAOC,KAAP,EAAc;MACdD,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAACD,KAAD,CAAR;IACD;EACF,CAXD;;EAYA,MAAMQ,WAAW,GAAG,MAAOD,EAAP,IAAkB;IACpC,IAAI;MACFR,UAAU,CAAC,IAAD,CAAV;;MACA,IAAGJ,IAAI,IAAI,IAAX,EAAgB;QACd,MAAMH,cAAc,CAACe,EAAD,EAAKZ,IAAL,CAApB;MACD;;MACDI,UAAU,CAAC,KAAD,CAAV;IACD,CAND,CAME,OAAOC,KAAP,EAAc;MACdD,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAACD,KAAD,CAAR;IACD;EACF,CAXD;;EAYF,MAAMS,YAAY,GAAG,OAAQJ,IAAR,EAAkBK,MAAlB,KAAiC;IACpD,IAAI;MACDX,UAAU,CAAC,IAAD,CAAV;;MACD,IAAGJ,IAAI,IAAI,IAAX,EAAgB;QAChBgB,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAAkB,eAAlB;MAEC;IACF,CAND,CAME,OAAOL,KAAP,EAAc;MACdD,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAACD,KAAD,CAAR;IACD;EACF,CAXD;;EAaI,OAAO;IACHF,OADG;IAEHE,KAFG;IAGHJ,MAHG;IAIHM,SAJG;IAKHE,QALG;IAMHE,WANG;IAOHE,WAPG;IAQHC;EARG,CAAP;AAUH;;GAhFef,S;UACKD,O"},"metadata":{},"sourceType":"module"}