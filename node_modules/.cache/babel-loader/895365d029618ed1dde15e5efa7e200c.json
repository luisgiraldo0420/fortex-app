{"ast":null,"code":"import { API_URL } from \"../utils/constants\";\nimport { toast } from \"react-toastify\";\n/*Hacemos la petici贸n para traer la informaci贸n del detalle del producto */\n\nexport async function getGroupsApi(token) {\n  try {\n    const url = `${API_URL}group/`;\n    const params = {\n      headers: {\n        Authorization: `${token.token}`\n      }\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function addGroupApi(data, token) {\n  try {\n    const url = `${API_URL}group/create`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${token.token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function editGroupApi(id, data, token) {\n  try {\n    const url = `${API_URL}group/${id}`;\n    const params = {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\nexport async function deleteGroupApi(id, token) {\n  try {\n    const url = `https://demo-api-work-test.herokuapp.com/group/delete/${id}/`;\n    const params = {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function compareObjects(data, token, id) {\n  const response = await getGroupsApi(token);\n  const groupsDb = response.groups;\n  let exist = false;\n  groupsDb.filter(element => {\n    if (element.name.toString().toLowerCase().includes(data.name.toLowerCase())) {\n      exist = true;\n    }\n  });\n\n  if (exist === false) {\n    if (id) {\n      editGroupApi(id, data, token);\n    } else {\n      addGroupApi(data, token);\n    }\n  } else if (exist === true) {\n    toast(`El grupo ya existe`);\n  }\n}","map":{"version":3,"names":["API_URL","toast","getGroupsApi","token","url","params","headers","Authorization","response","fetch","result","json","error","addGroupApi","data","method","body","JSON","stringify","editGroupApi","id","console","log","deleteGroupApi","compareObjects","groupsDb","groups","exist","filter","element","name","toString","toLowerCase","includes"],"sources":["/Users/luisgiraldo/Desktop/fortex/src/api/groups.tsx"],"sourcesContent":["import React, {useState} from 'react'\nimport { API_URL } from \"../utils/constants\";\nimport { toast } from \"react-toastify\";\n\n\n/*Hacemos la petici贸n para traer la informaci贸n del detalle del producto */\nexport async function getGroupsApi(token: any) {  \n  try {\n    const url = `${API_URL}group/`;\n    const params = {\n      headers: {\n        Authorization: `${token.token}`,\n      },\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function addGroupApi(data:any, token:any) {\n  try {\n    const url = `${API_URL}group/create`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        Authorization: `${token.token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function editGroupApi(id:string, data:any, token: any){\n  try {\n    const url = `${API_URL}group/${id}`;\n    const params = {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    \n    throw error;\n  }\n\n}\n\nexport async function deleteGroupApi(id:any, token:any) {\n  try {\n    const url = `https://demo-api-work-test.herokuapp.com/group/delete/${id}/`;\n    const params = {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\n\n\n\nexport async function compareObjects (data:any, token: any, id:any){\n  const response = await getGroupsApi(token);\n  const groupsDb = response.groups;\n  let exist = false \n  groupsDb.filter((element:any) => {\n    if(element.name.toString().toLowerCase().includes(data.name.toLowerCase())){\n      exist = true\n    }\n  })\n  if (exist === false){\n    if(id){\n      editGroupApi(id, data, token);\n    }else{\n      addGroupApi(data, token);\n    }\n  }else if (exist === true){\n    toast(`El grupo ya existe`);\n  }\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}