{"ast":null,"code":"var _jsxFileName = \"/Users/luisgiraldo/Desktop/fortex/src/components/LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Input, InputLabel, Button, Grid } from '@material-ui/core';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { loginApi } from '../api/user';\nimport { toast } from \"react-toastify\";\nimport { useAuth } from '../hocks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(4),\n      flexShrink: 0\n    }\n  },\n  content_input: {\n    width: '100%'\n  },\n  btn_submit: {}\n}));\nexport default function LoginForm() {\n  _s();\n\n  const {\n    login\n  } = useAuth();\n  const classes = useStyles();\n  const [error, setError] = React.useState(null);\n  /**Estructura de formik */\n\n  const formik = useFormik({\n    initialValues: intialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async formValue => {\n      try {\n        const response = await loginApi(formValue);\n        const {\n          token,\n          user\n        } = response;\n        console.log(response.user, 'usuario completo');\n        login(token, user);\n      } catch (error) {\n        console.log(error, '0000000');\n        toast.error(error.message);\n\n        if (error.code === \"auth/wrong-password\") {\n          setError(\"Ups... contraseña errada \");\n        }\n\n        if (error.code === \"auth/user-not-found\") {\n          setError(\"Ups... email invalido \");\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.content_input,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"component-simple\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"component-simple\",\n          name: \"email\",\n          value: formik.values.email,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.content_input,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"component-simple\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"component-simple\",\n          type: \"password\",\n          name: \"password\",\n          value: formik.values.password,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-submit\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"start session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"aXmsVoMnRYWfi5gdSV5a58s1mlY=\", false, function () {\n  return [useAuth, useStyles, useFormik];\n});\n\n_c = LoginForm;\n\nfunction intialValues() {\n  return {\n    email: \"\",\n    password: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    email: Yup.string().email().required(),\n    password: Yup.string().required('error')\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","makeStyles","FormControl","Input","InputLabel","Button","Grid","useFormik","Yup","loginApi","toast","useAuth","useStyles","theme","root","margin","spacing","flexShrink","content_input","width","btn_submit","LoginForm","login","classes","error","setError","useState","formik","initialValues","intialValues","validationSchema","object","onSubmit","formValue","response","token","user","console","log","message","code","handleSubmit","values","email","handleChange","password","string","required"],"sources":["/Users/luisgiraldo/Desktop/fortex/src/components/LoginForm.tsx"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Input, InputLabel, Button, Grid } from '@material-ui/core';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { loginApi } from '../api/user';\nimport { toast } from \"react-toastify\";\nimport { useAuth } from '../hocks/useAuth';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(4),\n        flexShrink: 0,\n      }\n    },\n    content_input:{\n        width: '100%'\n        },\n    btn_submit:{\n\n    }    \n  }));\n\nexport default function LoginForm() {\n    const {login} = useAuth();\n    const classes = useStyles();\n  \n\n    const [error, setError] =  React.useState<any | null>(null);\n\n    /**Estructura de formik */\n    const formik = useFormik({\n        initialValues: intialValues(),\n        validationSchema: Yup.object(validationSchema()),\n        onSubmit: async (formValue) => {\n            try {\n           \n                const response = await loginApi(formValue);\n                const { token, user } = response;\n                console.log(response.user, 'usuario completo');\n                \n                login(token, user)\n              } catch (error:any) {\n                console.log(error, '0000000');\n                toast.error(error.message);\n                if (error.code === \"auth/wrong-password\") {\n                  setError(\"Ups... contraseña errada \");\n                }\n                if (error.code === \"auth/user-not-found\") {\n                  setError(\"Ups... email invalido \");\n                }\n              } \n        },\n      });\n    \n  return (\n    <form className={classes.root} onSubmit={formik.handleSubmit}>\n                <Grid>\n                    <FormControl className={classes.content_input}>\n                        <InputLabel htmlFor=\"component-simple\">Email</InputLabel>\n                        <Input \n                        id=\"component-simple\" \n                        name='email'\n                        value={formik.values.email}\n                        onChange={formik.handleChange}\n                        \n                        />\n                    </FormControl>\n                </Grid>\n                <Grid>\n                    <FormControl className={classes.content_input}>\n                        <InputLabel htmlFor=\"component-simple\">Password</InputLabel>\n                        <Input \n                        id=\"component-simple\" \n                        type='password' \n                        name='password' \n                        value={formik.values.password}\n                        onChange={formik.handleChange}\n                        />\n                    </FormControl>\n                </Grid>\n               <div className=\"btn-submit\">\n                    <Button variant='contained' color='primary' type='submit'>\n                            start session\n                    </Button>\n               </div>\n                \n                </form>\n  )\n}\n\n\nfunction intialValues() {\n    return {\n      email: \"\",\n      password: \"\",\n    };\n  }\n  \n  function validationSchema() {\n    return {\n        email: Yup.string().email().required(),\n      password: Yup.string().required('error'),\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}