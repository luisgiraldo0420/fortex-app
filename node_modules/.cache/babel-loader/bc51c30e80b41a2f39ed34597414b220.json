{"ast":null,"code":"var _jsxFileName = \"/Users/luisgiraldo/Desktop/fortex/src/components/groups/AddEditGroups.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TextField, makeStyles, createStyles, Button } from '@material-ui/core';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { useGroups } from '../../hooks/useGroups';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '100%'\n    }\n  },\n  btn_create: {\n    textAlign: 'center',\n    marginTop: 30\n  }\n}));\nexport function AddEditGroups(props) {\n  _s();\n\n  const {\n    onClose,\n    onrefresh,\n    group\n  } = props;\n  const {\n    addGroup,\n    updateGroup\n  } = useGroups();\n  const classes = useStyles();\n  const [error, setError] = React.useState(null);\n  const formik = useFormik({\n    initialValues: intialValues(group),\n    validateOnChange: true,\n    validationSchema: Yup.object(newSchema()),\n    onSubmit: async formValue => {\n      try {\n        if (group) await updateGroup(group.id, formValue);else await addGroup(formValue);\n        onrefresh();\n        onClose();\n      } catch (error) {\n        toast.error(error.message);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Group name\",\n        id: \"name\",\n        size: \"small\",\n        name: \"name\",\n        value: formik.values.name,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Group description\",\n        size: \"small\",\n        id: \"description\",\n        name: \"description\",\n        value: formik.values.description,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.btn_create,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        id: \"crear\",\n        children: group ? \"Update\" : \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditGroups, \"6xOFCY+6fXOCvGCPldwiBsGPAiI=\", false, function () {\n  return [useGroups, useStyles, useFormik];\n});\n\n_c = AddEditGroups;\n\nfunction intialValues(group) {\n  return {\n    name: (group === null || group === void 0 ? void 0 : group.name) || \"\",\n    description: (group === null || group === void 0 ? void 0 : group.description) || \"\"\n  };\n}\n\nfunction newSchema() {\n  return {\n    name: Yup.string().required('true'),\n    description: Yup.string().required('error')\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditGroups\");","map":{"version":3,"names":["React","TextField","makeStyles","createStyles","Button","useFormik","Yup","toast","useGroups","useStyles","theme","root","margin","spacing","width","btn_create","textAlign","marginTop","AddEditGroups","props","onClose","onrefresh","group","addGroup","updateGroup","classes","error","setError","useState","formik","initialValues","intialValues","validateOnChange","validationSchema","object","newSchema","onSubmit","formValue","id","message","handleSubmit","values","name","handleChange","description","string","required"],"sources":["/Users/luisgiraldo/Desktop/fortex/src/components/groups/AddEditGroups.tsx"],"sourcesContent":["import React from 'react'\nimport {TextField, makeStyles, createStyles, Button} from '@material-ui/core';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport {useGroups} from '../../hooks/useGroups';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '100%',\n      },\n    },\n    btn_create:{\n      textAlign: 'center',\n      marginTop: 30\n    }\n  }),\n);\n\nexport function AddEditGroups(props:any) {\n  const {onClose, onrefresh, group} = props\n  const {addGroup, updateGroup} = useGroups();\n  const classes = useStyles();\n  const [error, setError] =  React.useState<any | null>(null);\n\n\n  const formik = useFormik({\n    initialValues: intialValues(group),\n    validateOnChange: true,\n    validationSchema: Yup.object(newSchema()),\n    onSubmit: async (formValue) => {\n        try {\n          if (group) await updateGroup(group.id, formValue);\n          else await addGroup(formValue);\n          onrefresh();\n          onClose();\n          } catch (error:any) {\n            toast.error(error.message);\n          } \n    },\n  });\n\n\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n      <div>\n        <TextField \n        label=\"Group name\" \n        id=\"name\" \n        size=\"small\"\n        name='name' \n        value={formik.values.name}\n        onChange={formik.handleChange}\n        />\n        <TextField \n        label=\"Group description\" \n        size=\"small\"\n        id=\"description\" \n        name='description'\n        value={formik.values.description}\n        onChange={formik.handleChange}\n         />\n      </div>\n     <div className={classes.btn_create}>\n     <Button \n      variant=\"contained\" \n      color=\"primary\" \n      type='submit'\n      id='crear'\n      >\n       {group ? \"Update\" : \"Create\"}\n      </Button>\n     </div>\n    </form>\n  )\n}\n\nfunction intialValues(group: any) {\n  return {\n    name: group?.name || \"\",\n    description: group?.description || \"\",\n  };\n}\n\nfunction newSchema() {\n  return {\n    name: Yup.string().required('true'),\n    description: Yup.string().required('error'),\n}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}